// ==UserScript==
// @name         OpenGuessr Cheat
// @namespace    https://openguessr.com/
// @version      1.0
// @description  Show/hide map with location on OpenGuessr ‚Äì no Google Maps needed, resizable, movable üíö
// @author       Arne371
// @match        https://openguessr.com/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // Load Leaflet
    const leafletCSS = document.createElement('link');
    leafletCSS.rel = 'stylesheet';
    leafletCSS.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
    document.head.appendChild(leafletCSS);

    const leafletScript = document.createElement('script');
    leafletScript.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
    leafletScript.onload = () => {
        console.log('Leaflet loaded.');
        setupButton();
    };
    document.body.appendChild(leafletScript);

    function setupButton() {
        // Button to toggle map visibility
        const button = document.createElement('button');
        button.innerText = 'üìç Show Location';
        Object.assign(button.style, {
            position: 'fixed',
            top: '20px',
            right: '20px',
            zIndex: 9999,
            padding: '10px 15px',
            background: '#2e8b57',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontSize: '16px',
            boxShadow: '0 2px 6px rgba(0,0,0,0.2)'
        });

        document.body.appendChild(button);

        let mapContainer, map, marker;
        let mapVisible = false;

        button.addEventListener('click', () => {
            const iframe = document.querySelector('#PanoramaIframe');
            if (!iframe) return alert('PanoramaIframe not found.');

            const src = iframe.getAttribute('src');
            if (!src || !src.includes('location=')) return alert('No coordinates found.');

            const url = new URL(src);
            const location = url.searchParams.get('location');
            if (!location) return alert('Location parameter missing.');

            const [lat, lng] = location.split(',').map(Number);
            if (isNaN(lat) || isNaN(lng)) return alert('Invalid coordinates.');

            if (mapVisible) {
                closeMap();
                return;
            }

            showMap(lat, lng);
        });

        function showMap(lat, lng) {
            mapContainer = document.createElement('div');
            mapContainer.id = 'mapid';
            Object.assign(mapContainer.style, {
                position: 'fixed',
                top: '50%',
                right: '20px',
                width: '400px',
                height: '300px',
                zIndex: 9999,
                border: '2px solid #444',
                borderRadius: '10px',
                overflow: 'hidden',
                boxShadow: '0 2px 10px rgba(0,0,0,0.3)',
                background: 'white',
                transform: 'translateY(-50%)'
            });

            // üóô Close button
            const closeBtn = document.createElement('div');
            closeBtn.innerText = '‚úñ';
            Object.assign(closeBtn.style, {
                position: 'absolute',
                top: '6px',
                right: '10px',
                cursor: 'pointer',
                fontSize: '18px',
                color: '#444',
                zIndex: 10000
            });
            closeBtn.title = 'Close map';
            closeBtn.addEventListener('click', closeMap);
            mapContainer.appendChild(closeBtn);

            // Resizing handle
            const resizeHandle = document.createElement('div');
            resizeHandle.style.position = 'absolute';
            resizeHandle.style.bottom = '0';
            resizeHandle.style.right = '0';
            resizeHandle.style.width = '15px';
            resizeHandle.style.height = '15px';
            resizeHandle.style.cursor = 'se-resize';
            resizeHandle.style.background = '#888';
            mapContainer.appendChild(resizeHandle);

            document.body.appendChild(mapContainer);

            // Create Leaflet map element and embed it in the container
            map = L.map(mapContainer).setView([lat, lng], 15);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
            marker = L.marker([lat, lng]).addTo(map)
                .bindPopup(`üìå ${lat.toFixed(5)}, ${lng.toFixed(5)}`).openPopup();

            mapVisible = true;
            button.innerText = 'üó∫Ô∏è Close Map';

            // Resize handle functionality
            resizeHandle.addEventListener('mousedown', (e) => {
                e.preventDefault();
                const startX = e.clientX;
                const startY = e.clientY;
                const startWidth = mapContainer.offsetWidth;
                const startHeight = mapContainer.offsetHeight;

                function onMouseMove(event) {
                    const newWidth = startWidth + event.clientX - startX;
                    const newHeight = startHeight + event.clientY - startY;
                    mapContainer.style.width = `${Math.max(newWidth, 200)}px`; // Minimum width
                    mapContainer.style.height = `${Math.max(newHeight, 200)}px`; // Minimum height
                    map.invalidateSize(); // Leaflet map needs to be resized
                }

                function onMouseUp() {
                    document.removeEventListener('mousemove', onMouseMove);
                    document.removeEventListener('mouseup', onMouseUp);
                }

                document.addEventListener('mousemove', onMouseMove);
                document.addEventListener('mouseup', onMouseUp);
            });
        }

        function closeMap() {
            if (map) map.remove();
            if (mapContainer) mapContainer.remove();
            mapContainer = null;
            map = null;
            marker = null;
            mapVisible = false;
            button.innerText = 'üìç Show Location';
        }
    }
})();
